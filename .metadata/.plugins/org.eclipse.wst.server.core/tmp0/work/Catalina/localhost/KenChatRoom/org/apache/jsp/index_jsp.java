/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.32
 * Generated at: 2015-02-03 06:44:51 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.ibcio.WebSocketMessageServlet;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

	String user = (String)session.getAttribute("user");
	if(user == null){
		//为用户生成昵称
		user = "游客" + WebSocketMessageServlet.ONLINE_USER_COUNT;
		WebSocketMessageServlet.ONLINE_USER_COUNT ++;
		session.setAttribute("user", user);
	}
	pageContext.setAttribute("user", user);

      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("\t<title>WebSocket 聊天室</title>\r\n");
      out.write("\t<!-- 引入CSS文件 -->\r\n");
      out.write("\t<link rel=\"stylesheet\" type=\"text/css\" href=\"ext4/resources/css/ext-all.css\">\r\n");
      out.write("\t<link rel=\"stylesheet\" type=\"text/css\" href=\"ext4/shared/example.css\" />\r\n");
      out.write("\t<link rel=\"stylesheet\" type=\"text/css\" href=\"css/websocket.css\" />\r\n");
      out.write("\t\r\n");
      out.write("\t<!-- 映入Ext的JS开发包，及自己实现的webscoket. -->\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"ext4/ext-all-debug.js\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"websocket.js\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\t\tvar user = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${user}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("\";\r\n");
      out.write("\t</script>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\t<h1>WebSocket聊天室</h1>\r\n");
      out.write("\t<p>通过HTML5标准提供的API与Ext富客户端框架相结合起来，实现聊天室，有以下特点：</p>\r\n");
      out.write("\t<ul class=\"feature-list\" style=\"padding-left: 10px;\">\r\n");
      out.write("\t\t<li>实时获取数据，由服务器推送，实现即时通讯</li>\r\n");
      out.write("\t\t<li>利用WebSocket完成数据通讯，区别于轮询，长连接等技术，节省服务器资源</li>\r\n");
      out.write("\t\t<li>结合Ext进行页面展示</li>\r\n");
      out.write("\t\t<li>用户上线下线通知</li>\r\n");
      out.write("\t</ul>\r\n");
      out.write("\t<div id=\"websocket_button\"></div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
